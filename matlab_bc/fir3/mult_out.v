// -------------------------------------------------------------
//
// Module: filter
// Generated by MATLAB(R) 9.8 and Filter Design HDL Coder 3.1.7.
// Generated on: 2021-01-22 10:32:15
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// Name: casfilt
// InputDataType: numerictype(1,8,7)
// TargetLanguage: Verilog
// GenerateHDLTestBench: off

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// Folding Factor        : 1
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form Symmetric FIR
// Filter Length     : 77
// Stable            : Yes
// Linear Phase      : Yes (Type 1)
// Arithmetic        : fixed
// Numerator         : s8,7 -> [-1 1)
// -------------------------------------------------------------
// Multipliers           : 6



`timescale 1 ns / 1 ns

module mult_out
               (
                tapsum_mcand,
                tapsum_mcand_1,
                tapsum_mcand_2,
                tapsum_mcand_3,
                tapsum_mcand_4,
                tapsum_mcand_5,
                tapsum_mcand_6,
                tapsum_mcand_7,
                filter_out
                );

  input signed [8:0] tapsum_mcand; // sfix9_En7
  input signed [8:0] tapsum_mcand_1; // sfix9_En7
  input signed [8:0] tapsum_mcand_2; // sfix9_En7
  input signed [8:0] tapsum_mcand_3; // sfix9_En7
  input signed [8:0] tapsum_mcand_4; // sfix9_En7
  input signed [8:0] tapsum_mcand_5; // sfix9_En7  
  input signed [8:0] tapsum_mcand_6; // sfix9_En7
  input signed [7:0] tapsum_mcand_7; // sfix9_En7

  output signed [7:0] filter_out; //sfix8_En7

////////////////////////////////////////////////////////////////
//Module Architecture: casfilt_stage2
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  parameter signed [7:0] coeff1 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff2 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff3 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff4 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff5 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff6 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff7 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff8 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff9 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff10 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff11 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff12 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff13 = 8'b00000001; //sfix8_En7
  parameter signed [7:0] coeff14 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff15 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff16 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff17 = 8'b11111111; //sfix8_En7
  parameter signed [7:0] coeff18 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff19 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff20 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff21 = 8'b00000010; //sfix8_En7
  parameter signed [7:0] coeff22 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff23 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff24 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff25 = 8'b11111100; //sfix8_En7
  parameter signed [7:0] coeff26 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff27 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff28 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff29 = 8'b00000111; //sfix8_En7
  parameter signed [7:0] coeff30 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff31 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff32 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff33 = 8'b11110011; //sfix8_En7
  parameter signed [7:0] coeff34 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff35 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff36 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff37 = 8'b00101000; //sfix8_En7
  parameter signed [7:0] coeff38 = 8'b00000000; //sfix8_En7
  parameter signed [7:0] coeff39 = 8'b01000000; //sfix8_En7
  
  wire signed [16:0] product13; // sfix17_En14
  wire signed [16:0] product17; // sfix17_En14
  wire signed [16:0] product21; // sfix17_En14
  wire signed [16:0] product25;
  wire signed [16:0] product29;
  wire signed [16:0] product33;
  wire signed [16:0] product37;
  wire signed [16:0] product39;

  wire signed [9:0] mulpwr2_temp; // sfix10_En7
  wire signed [9:0] mulpwr2_temp_1; // sfix10_En7
  wire signed [22:0] sum1; // sfix23_En14
  wire signed [16:0] add_signext_14; // sfix17_En14
  wire signed [16:0] add_signext_15; // sfix17_En14
  wire signed [17:0] add_temp; // sfix18_En14
  wire signed [22:0] sum2; // sfix23_En14
  wire signed [22:0] add_signext_16; // sfix23_En14
  wire signed [22:0] add_signext_17; // sfix23_En14
  wire signed [23:0] add_temp_1; // sfix24_En14
  wire signed [22:0] sum3; // sfix23_En14
  wire signed [22:0] add_signext_18; // sfix23_En14
  wire signed [22:0] add_signext_19; // sfix23_En14
  wire signed [23:0] add_temp_2; // sfix24_En14
  wire signed [22:0] sum4; // sfix23_En14
  wire signed [22:0] add_signext_20; // sfix23_En14
  wire signed [22:0] add_signext_21; // sfix23_En14
  wire signed [23:0] add_temp_3; // sfix24_En14
  wire signed [22:0] sum5; // sfix23_En14
  wire signed [22:0] add_signext_22; // sfix23_En14
  wire signed [22:0] add_signext_23; // sfix23_En14
  wire signed [23:0] add_temp_4; // sfix24_En14
  wire signed [22:0] sum6; // sfix23_En14
  wire signed [22:0] add_signext_24; // sfix23_En14
  wire signed [22:0] add_signext_25; // sfix23_En14
  wire signed [23:0] add_temp_5; // sfix24_En14
  wire signed [22:0] sum7; // sfix23_En14
  wire signed [22:0] add_signext_26; // sfix23_En14
  wire signed [22:0] add_signext_27; // sfix23_En14
  wire signed [23:0] add_temp_6; // sfix24_En14
  wire signed [7:0] output_typeconvert; // sfix8_En7
  

  assign product39 = $signed({tapsum_mcand_7, 6'b000000});

  assign product37 = tapsum_mcand_6 * coeff37;

  assign product33 = tapsum_mcand_5 * coeff33;

  assign product29 = tapsum_mcand_4 * coeff29;

  assign mulpwr2_temp = (tapsum_mcand_3==9'b100000000) ? $signed({1'b0, tapsum_mcand_3}) : -tapsum_mcand_3;

  assign product25 = $signed({mulpwr2_temp[9:0], 2'b00});

  assign product21 = $signed({tapsum_mcand_2[8:0], 1'b0});

  assign mulpwr2_temp_1 = (tapsum_mcand_1==9'b100000000) ? $signed({1'b0, tapsum_mcand_1}) : -tapsum_mcand_1;

  assign product17 = $signed({{7{mulpwr2_temp_1[9]}}, mulpwr2_temp_1});

  assign product13 = $signed({{8{tapsum_mcand[8]}}, tapsum_mcand});

  assign add_signext_14 = product13;
  assign add_signext_15 = product17;
  assign add_temp = add_signext_14 + add_signext_15;
  assign sum1 = $signed({{5{add_temp[17]}}, add_temp});

  assign add_signext_16 = sum1;
  assign add_signext_17 = $signed({{6{product21[16]}}, product21});
  assign add_temp_1 = add_signext_16 + add_signext_17;
  assign sum2 = add_temp_1[22:0];

  assign add_signext_18 = sum2;
  assign add_signext_19 = $signed({{6{product25[16]}}, product25});
  assign add_temp_2 = add_signext_18 + add_signext_19;
  assign sum3 = add_temp_2[22:0];

  assign add_signext_20 = sum3;
  assign add_signext_21 = $signed({{6{product29[16]}}, product29});
  assign add_temp_3 = add_signext_20 + add_signext_21;
  assign sum4 = add_temp_3[22:0];

  assign add_signext_22 = sum4;
  assign add_signext_23 = $signed({{6{product33[16]}}, product33});
  assign add_temp_4 = add_signext_22 + add_signext_23;
  assign sum5 = add_temp_4[22:0];

  assign add_signext_24 = sum5;
  assign add_signext_25 = $signed({{6{product37[16]}}, product37});
  assign add_temp_5 = add_signext_24 + add_signext_25;
  assign sum6 = add_temp_5[22:0];

  assign add_signext_26 = sum6;
  assign add_signext_27 = $signed({{6{product39[16]}}, product39});
  assign add_temp_6 = add_signext_26 + add_signext_27;
  assign sum7 = add_temp_6[22:0];

  assign output_typeconvert = sum7[14:7];

  // Assignment Statements
  assign filter_out = output_typeconvert;
endmodule  // casfilt_stage2
