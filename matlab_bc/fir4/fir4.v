// -------------------------------------------------------------
//
// Module: filter
// Generated by MATLAB(R) 9.8 and Filter Design HDL Coder 3.1.7.
// Generated on: 2021-01-22 11:24:17
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// Name: casfilt
// InputDataType: numerictype(1,8,7)
// TargetLanguage: Verilog
// GenerateHDLTestBench: off

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form FIR Transposed
// Filter Length     : 145
// Stable            : Yes
// Linear Phase      : Yes (Type 1)
// Arithmetic        : fixed
// Numerator         : s8,7 -> [-1 1)
// -------------------------------------------------------------
// Multipliers           : 3



`timescale 1 ns / 1 ns

module fir4
               (
                clk,
                clk_enable,
                reset,
                product73, // sfix16_En14
                product81, // sfix16_En14
                product97, // sfix16_En14
                product113, // sfix16_En14
                product129, // sfix16_En14
                filter_out
                );

  input   clk; 
  input   clk_enable; 
  input   reset; 
  input signed [15:0] product73; // sfix16_En14
  input signed [15:0] product81; // sfix16_En14
  input signed [15:0] product97; // sfix16_En14
  input signed [15:0] product113; // sfix16_En14
  input signed [15:0] product129; // sfix16_En14

  output  signed [7:0] filter_out; //sfix8_En7

////////////////////////////////////////////////////////////////
//Module Architecture: casfilt_stage1
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants

  parameter signed [23:0] constzero = 24'b000000000000000000000000; //sfix24_En14
  // Signals
  reg  signed [7:0] inputreg; // sfix8_En7
  reg  signed [23:0] delay_pipeline [0:143] ; // sfix24_En14
  wire signed [23:0] sumvector [0:143] ; // sfix24_En14

  wire signed [23:0] finalsum; // sfix24_En14
  wire signed [23:0] add_signext; // sfix24_En14
  wire signed [23:0] add_signext_1; // sfix24_En14
  wire signed [24:0] add_temp; // sfix25_En14
  wire signed [23:0] add_signext_2; // sfix24_En14
  wire signed [23:0] add_signext_3; // sfix24_En14
  wire signed [24:0] add_temp_1; // sfix25_En14
  wire signed [23:0] add_signext_4; // sfix24_En14
  wire signed [23:0] add_signext_5; // sfix24_En14
  wire signed [24:0] add_temp_2; // sfix25_En14
  wire signed [23:0] add_signext_6; // sfix24_En14
  wire signed [23:0] add_signext_7; // sfix24_En14
  wire signed [24:0] add_temp_3; // sfix25_En14
  wire signed [23:0] add_signext_8; // sfix24_En14
  wire signed [23:0] add_signext_9; // sfix24_En14
  wire signed [24:0] add_temp_4; // sfix25_En14
  wire signed [23:0] add_signext_10; // sfix24_En14
  wire signed [23:0] add_signext_11; // sfix24_En14
  wire signed [24:0] add_temp_5; // sfix25_En14
  wire signed [23:0] add_signext_12; // sfix24_En14
  wire signed [23:0] add_signext_13; // sfix24_En14
  wire signed [24:0] add_temp_6; // sfix25_En14
  wire signed [23:0] add_signext_14; // sfix24_En14
  wire signed [23:0] add_signext_15; // sfix24_En14
  wire signed [24:0] add_temp_7; // sfix25_En14
  wire signed [23:0] add_signext_16; // sfix24_En14
  wire signed [23:0] add_signext_17; // sfix24_En14
  wire signed [24:0] add_temp_8; // sfix25_En14
  wire signed [7:0] output_typeconvert; // sfix8_En7

  always @ (posedge clk or posedge reset)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
        delay_pipeline[41] <= 0;
        delay_pipeline[42] <= 0;
        delay_pipeline[43] <= 0;
        delay_pipeline[44] <= 0;
        delay_pipeline[45] <= 0;
        delay_pipeline[46] <= 0;
        delay_pipeline[47] <= 0;
        delay_pipeline[48] <= 0;
        delay_pipeline[49] <= 0;
        delay_pipeline[50] <= 0;
        delay_pipeline[51] <= 0;
        delay_pipeline[52] <= 0;
        delay_pipeline[53] <= 0;
        delay_pipeline[54] <= 0;
        delay_pipeline[55] <= 0;
        delay_pipeline[56] <= 0;
        delay_pipeline[57] <= 0;
        delay_pipeline[58] <= 0;
        delay_pipeline[59] <= 0;
        delay_pipeline[60] <= 0;
        delay_pipeline[61] <= 0;
        delay_pipeline[62] <= 0;
        delay_pipeline[63] <= 0;
        delay_pipeline[64] <= 0;
        delay_pipeline[65] <= 0;
        delay_pipeline[66] <= 0;
        delay_pipeline[67] <= 0;
        delay_pipeline[68] <= 0;
        delay_pipeline[69] <= 0;
        delay_pipeline[70] <= 0;
        delay_pipeline[71] <= 0;
        delay_pipeline[72] <= 0;
        delay_pipeline[73] <= 0;
        delay_pipeline[74] <= 0;
        delay_pipeline[75] <= 0;
        delay_pipeline[76] <= 0;
        delay_pipeline[77] <= 0;
        delay_pipeline[78] <= 0;
        delay_pipeline[79] <= 0;
        delay_pipeline[80] <= 0;
        delay_pipeline[81] <= 0;
        delay_pipeline[82] <= 0;
        delay_pipeline[83] <= 0;
        delay_pipeline[84] <= 0;
        delay_pipeline[85] <= 0;
        delay_pipeline[86] <= 0;
        delay_pipeline[87] <= 0;
        delay_pipeline[88] <= 0;
        delay_pipeline[89] <= 0;
        delay_pipeline[90] <= 0;
        delay_pipeline[91] <= 0;
        delay_pipeline[92] <= 0;
        delay_pipeline[93] <= 0;
        delay_pipeline[94] <= 0;
        delay_pipeline[95] <= 0;
        delay_pipeline[96] <= 0;
        delay_pipeline[97] <= 0;
        delay_pipeline[98] <= 0;
        delay_pipeline[99] <= 0;
        delay_pipeline[100] <= 0;
        delay_pipeline[101] <= 0;
        delay_pipeline[102] <= 0;
        delay_pipeline[103] <= 0;
        delay_pipeline[104] <= 0;
        delay_pipeline[105] <= 0;
        delay_pipeline[106] <= 0;
        delay_pipeline[107] <= 0;
        delay_pipeline[108] <= 0;
        delay_pipeline[109] <= 0;
        delay_pipeline[110] <= 0;
        delay_pipeline[111] <= 0;
        delay_pipeline[112] <= 0;
        delay_pipeline[113] <= 0;
        delay_pipeline[114] <= 0;
        delay_pipeline[115] <= 0;
        delay_pipeline[116] <= 0;
        delay_pipeline[117] <= 0;
        delay_pipeline[118] <= 0;
        delay_pipeline[119] <= 0;
        delay_pipeline[120] <= 0;
        delay_pipeline[121] <= 0;
        delay_pipeline[122] <= 0;
        delay_pipeline[123] <= 0;
        delay_pipeline[124] <= 0;
        delay_pipeline[125] <= 0;
        delay_pipeline[126] <= 0;
        delay_pipeline[127] <= 0;
        delay_pipeline[128] <= 0;
        delay_pipeline[129] <= 0;
        delay_pipeline[130] <= 0;
        delay_pipeline[131] <= 0;
        delay_pipeline[132] <= 0;
        delay_pipeline[133] <= 0;
        delay_pipeline[134] <= 0;
        delay_pipeline[135] <= 0;
        delay_pipeline[136] <= 0;
        delay_pipeline[137] <= 0;
        delay_pipeline[138] <= 0;
        delay_pipeline[139] <= 0;
        delay_pipeline[140] <= 0;
        delay_pipeline[141] <= 0;
        delay_pipeline[142] <= 0;
        delay_pipeline[143] <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          delay_pipeline[0] <= sumvector[0];
          delay_pipeline[1] <= sumvector[1];
          delay_pipeline[2] <= sumvector[2];
          delay_pipeline[3] <= sumvector[3];
          delay_pipeline[4] <= sumvector[4];
          delay_pipeline[5] <= sumvector[5];
          delay_pipeline[6] <= sumvector[6];
          delay_pipeline[7] <= sumvector[7];
          delay_pipeline[8] <= sumvector[8];
          delay_pipeline[9] <= sumvector[9];
          delay_pipeline[10] <= sumvector[10];
          delay_pipeline[11] <= sumvector[11];
          delay_pipeline[12] <= sumvector[12];
          delay_pipeline[13] <= sumvector[13];
          delay_pipeline[14] <= sumvector[14];
          delay_pipeline[15] <= sumvector[15];
          delay_pipeline[16] <= sumvector[16];
          delay_pipeline[17] <= sumvector[17];
          delay_pipeline[18] <= sumvector[18];
          delay_pipeline[19] <= sumvector[19];
          delay_pipeline[20] <= sumvector[20];
          delay_pipeline[21] <= sumvector[21];
          delay_pipeline[22] <= sumvector[22];
          delay_pipeline[23] <= sumvector[23];
          delay_pipeline[24] <= sumvector[24];
          delay_pipeline[25] <= sumvector[25];
          delay_pipeline[26] <= sumvector[26];
          delay_pipeline[27] <= sumvector[27];
          delay_pipeline[28] <= sumvector[28];
          delay_pipeline[29] <= sumvector[29];
          delay_pipeline[30] <= sumvector[30];
          delay_pipeline[31] <= sumvector[31];
          delay_pipeline[32] <= sumvector[32];
          delay_pipeline[33] <= sumvector[33];
          delay_pipeline[34] <= sumvector[34];
          delay_pipeline[35] <= sumvector[35];
          delay_pipeline[36] <= sumvector[36];
          delay_pipeline[37] <= sumvector[37];
          delay_pipeline[38] <= sumvector[38];
          delay_pipeline[39] <= sumvector[39];
          delay_pipeline[40] <= sumvector[40];
          delay_pipeline[41] <= sumvector[41];
          delay_pipeline[42] <= sumvector[42];
          delay_pipeline[43] <= sumvector[43];
          delay_pipeline[44] <= sumvector[44];
          delay_pipeline[45] <= sumvector[45];
          delay_pipeline[46] <= sumvector[46];
          delay_pipeline[47] <= sumvector[47];
          delay_pipeline[48] <= sumvector[48];
          delay_pipeline[49] <= sumvector[49];
          delay_pipeline[50] <= sumvector[50];
          delay_pipeline[51] <= sumvector[51];
          delay_pipeline[52] <= sumvector[52];
          delay_pipeline[53] <= sumvector[53];
          delay_pipeline[54] <= sumvector[54];
          delay_pipeline[55] <= sumvector[55];
          delay_pipeline[56] <= sumvector[56];
          delay_pipeline[57] <= sumvector[57];
          delay_pipeline[58] <= sumvector[58];
          delay_pipeline[59] <= sumvector[59];
          delay_pipeline[60] <= sumvector[60];
          delay_pipeline[61] <= sumvector[61];
          delay_pipeline[62] <= sumvector[62];
          delay_pipeline[63] <= sumvector[63];
          delay_pipeline[64] <= sumvector[64];
          delay_pipeline[65] <= sumvector[65];
          delay_pipeline[66] <= sumvector[66];
          delay_pipeline[67] <= sumvector[67];
          delay_pipeline[68] <= sumvector[68];
          delay_pipeline[69] <= sumvector[69];
          delay_pipeline[70] <= sumvector[70];
          delay_pipeline[71] <= sumvector[71];
          delay_pipeline[72] <= sumvector[72];
          delay_pipeline[73] <= sumvector[73];
          delay_pipeline[74] <= sumvector[74];
          delay_pipeline[75] <= sumvector[75];
          delay_pipeline[76] <= sumvector[76];
          delay_pipeline[77] <= sumvector[77];
          delay_pipeline[78] <= sumvector[78];
          delay_pipeline[79] <= sumvector[79];
          delay_pipeline[80] <= sumvector[80];
          delay_pipeline[81] <= sumvector[81];
          delay_pipeline[82] <= sumvector[82];
          delay_pipeline[83] <= sumvector[83];
          delay_pipeline[84] <= sumvector[84];
          delay_pipeline[85] <= sumvector[85];
          delay_pipeline[86] <= sumvector[86];
          delay_pipeline[87] <= sumvector[87];
          delay_pipeline[88] <= sumvector[88];
          delay_pipeline[89] <= sumvector[89];
          delay_pipeline[90] <= sumvector[90];
          delay_pipeline[91] <= sumvector[91];
          delay_pipeline[92] <= sumvector[92];
          delay_pipeline[93] <= sumvector[93];
          delay_pipeline[94] <= sumvector[94];
          delay_pipeline[95] <= sumvector[95];
          delay_pipeline[96] <= sumvector[96];
          delay_pipeline[97] <= sumvector[97];
          delay_pipeline[98] <= sumvector[98];
          delay_pipeline[99] <= sumvector[99];
          delay_pipeline[100] <= sumvector[100];
          delay_pipeline[101] <= sumvector[101];
          delay_pipeline[102] <= sumvector[102];
          delay_pipeline[103] <= sumvector[103];
          delay_pipeline[104] <= sumvector[104];
          delay_pipeline[105] <= sumvector[105];
          delay_pipeline[106] <= sumvector[106];
          delay_pipeline[107] <= sumvector[107];
          delay_pipeline[108] <= sumvector[108];
          delay_pipeline[109] <= sumvector[109];
          delay_pipeline[110] <= sumvector[110];
          delay_pipeline[111] <= sumvector[111];
          delay_pipeline[112] <= sumvector[112];
          delay_pipeline[113] <= sumvector[113];
          delay_pipeline[114] <= sumvector[114];
          delay_pipeline[115] <= sumvector[115];
          delay_pipeline[116] <= sumvector[116];
          delay_pipeline[117] <= sumvector[117];
          delay_pipeline[118] <= sumvector[118];
          delay_pipeline[119] <= sumvector[119];
          delay_pipeline[120] <= sumvector[120];
          delay_pipeline[121] <= sumvector[121];
          delay_pipeline[122] <= sumvector[122];
          delay_pipeline[123] <= sumvector[123];
          delay_pipeline[124] <= sumvector[124];
          delay_pipeline[125] <= sumvector[125];
          delay_pipeline[126] <= sumvector[126];
          delay_pipeline[127] <= sumvector[127];
          delay_pipeline[128] <= sumvector[128];
          delay_pipeline[129] <= sumvector[129];
          delay_pipeline[130] <= sumvector[130];
          delay_pipeline[131] <= sumvector[131];
          delay_pipeline[132] <= sumvector[132];
          delay_pipeline[133] <= sumvector[133];
          delay_pipeline[134] <= sumvector[134];
          delay_pipeline[135] <= sumvector[135];
          delay_pipeline[136] <= sumvector[136];
          delay_pipeline[137] <= sumvector[137];
          delay_pipeline[138] <= sumvector[138];
          delay_pipeline[139] <= sumvector[139];
          delay_pipeline[140] <= sumvector[140];
          delay_pipeline[141] <= sumvector[141];
          delay_pipeline[142] <= sumvector[142];
          delay_pipeline[143] <= sumvector[143];
        end
      end
    end // Delay_Pipeline_process


  assign finalsum = delay_pipeline[0];

  assign sumvector[0] = delay_pipeline[1];

  assign sumvector[1] = delay_pipeline[2];

  assign sumvector[2] = delay_pipeline[3];

  assign sumvector[3] = delay_pipeline[4];

  assign sumvector[4] = delay_pipeline[5];

  assign sumvector[5] = delay_pipeline[6];

  assign sumvector[6] = delay_pipeline[7];

  assign sumvector[7] = delay_pipeline[8];

  assign sumvector[8] = delay_pipeline[9];

  assign sumvector[9] = delay_pipeline[10];

  assign sumvector[10] = delay_pipeline[11];

  assign sumvector[11] = delay_pipeline[12];

  assign sumvector[12] = delay_pipeline[13];

  assign sumvector[13] = delay_pipeline[14];

  assign sumvector[14] = delay_pipeline[15];

  assign add_signext = $signed({{8{product129[15]}}, product129});
  assign add_signext_1 = delay_pipeline[16];
  assign add_temp = add_signext + add_signext_1;
  assign sumvector[15] = add_temp[23:0];

  assign sumvector[16] = delay_pipeline[17];

  assign sumvector[17] = delay_pipeline[18];

  assign sumvector[18] = delay_pipeline[19];

  assign sumvector[19] = delay_pipeline[20];

  assign sumvector[20] = delay_pipeline[21];

  assign sumvector[21] = delay_pipeline[22];

  assign sumvector[22] = delay_pipeline[23];

  assign sumvector[23] = delay_pipeline[24];

  assign sumvector[24] = delay_pipeline[25];

  assign sumvector[25] = delay_pipeline[26];

  assign sumvector[26] = delay_pipeline[27];

  assign sumvector[27] = delay_pipeline[28];

  assign sumvector[28] = delay_pipeline[29];

  assign sumvector[29] = delay_pipeline[30];

  assign sumvector[30] = delay_pipeline[31];

  assign add_signext_2 = $signed({{8{product113[15]}}, product113});
  assign add_signext_3 = delay_pipeline[32];
  assign add_temp_1 = add_signext_2 + add_signext_3;
  assign sumvector[31] = add_temp_1[23:0];

  assign sumvector[32] = delay_pipeline[33];

  assign sumvector[33] = delay_pipeline[34];

  assign sumvector[34] = delay_pipeline[35];

  assign sumvector[35] = delay_pipeline[36];

  assign sumvector[36] = delay_pipeline[37];

  assign sumvector[37] = delay_pipeline[38];

  assign sumvector[38] = delay_pipeline[39];

  assign sumvector[39] = delay_pipeline[40];

  assign sumvector[40] = delay_pipeline[41];

  assign sumvector[41] = delay_pipeline[42];

  assign sumvector[42] = delay_pipeline[43];

  assign sumvector[43] = delay_pipeline[44];

  assign sumvector[44] = delay_pipeline[45];

  assign sumvector[45] = delay_pipeline[46];

  assign sumvector[46] = delay_pipeline[47];

  assign add_signext_4 = $signed({{8{product97[15]}}, product97});
  assign add_signext_5 = delay_pipeline[48];
  assign add_temp_2 = add_signext_4 + add_signext_5;
  assign sumvector[47] = add_temp_2[23:0];

  assign sumvector[48] = delay_pipeline[49];

  assign sumvector[49] = delay_pipeline[50];

  assign sumvector[50] = delay_pipeline[51];

  assign sumvector[51] = delay_pipeline[52];

  assign sumvector[52] = delay_pipeline[53];

  assign sumvector[53] = delay_pipeline[54];

  assign sumvector[54] = delay_pipeline[55];

  assign sumvector[55] = delay_pipeline[56];

  assign sumvector[56] = delay_pipeline[57];

  assign sumvector[57] = delay_pipeline[58];

  assign sumvector[58] = delay_pipeline[59];

  assign sumvector[59] = delay_pipeline[60];

  assign sumvector[60] = delay_pipeline[61];

  assign sumvector[61] = delay_pipeline[62];

  assign sumvector[62] = delay_pipeline[63];

  assign add_signext_6 = $signed({{8{product81[15]}}, product81});
  assign add_signext_7 = delay_pipeline[64];
  assign add_temp_3 = add_signext_6 + add_signext_7;
  assign sumvector[63] = add_temp_3[23:0];

  assign sumvector[64] = delay_pipeline[65];

  assign sumvector[65] = delay_pipeline[66];

  assign sumvector[66] = delay_pipeline[67];

  assign sumvector[67] = delay_pipeline[68];

  assign sumvector[68] = delay_pipeline[69];

  assign sumvector[69] = delay_pipeline[70];

  assign sumvector[70] = delay_pipeline[71];

  assign add_signext_8 = $signed({{8{product73[15]}}, product73});
  assign add_signext_9 = delay_pipeline[72];
  assign add_temp_4 = add_signext_8 + add_signext_9;
  assign sumvector[71] = add_temp_4[23:0];

  assign sumvector[72] = delay_pipeline[73];

  assign sumvector[73] = delay_pipeline[74];

  assign sumvector[74] = delay_pipeline[75];

  assign sumvector[75] = delay_pipeline[76];

  assign sumvector[76] = delay_pipeline[77];

  assign sumvector[77] = delay_pipeline[78];

  assign sumvector[78] = delay_pipeline[79];

  assign add_signext_10 = $signed({{8{product81[15]}}, product81});
  assign add_signext_11 = delay_pipeline[80];
  assign add_temp_5 = add_signext_10 + add_signext_11;
  assign sumvector[79] = add_temp_5[23:0];

  assign sumvector[80] = delay_pipeline[81];

  assign sumvector[81] = delay_pipeline[82];

  assign sumvector[82] = delay_pipeline[83];

  assign sumvector[83] = delay_pipeline[84];

  assign sumvector[84] = delay_pipeline[85];

  assign sumvector[85] = delay_pipeline[86];

  assign sumvector[86] = delay_pipeline[87];

  assign sumvector[87] = delay_pipeline[88];

  assign sumvector[88] = delay_pipeline[89];

  assign sumvector[89] = delay_pipeline[90];

  assign sumvector[90] = delay_pipeline[91];

  assign sumvector[91] = delay_pipeline[92];

  assign sumvector[92] = delay_pipeline[93];

  assign sumvector[93] = delay_pipeline[94];

  assign sumvector[94] = delay_pipeline[95];

  assign add_signext_12 = $signed({{8{product97[15]}}, product97});
  assign add_signext_13 = delay_pipeline[96];
  assign add_temp_6 = add_signext_12 + add_signext_13;
  assign sumvector[95] = add_temp_6[23:0];

  assign sumvector[96] = delay_pipeline[97];

  assign sumvector[97] = delay_pipeline[98];

  assign sumvector[98] = delay_pipeline[99];

  assign sumvector[99] = delay_pipeline[100];

  assign sumvector[100] = delay_pipeline[101];

  assign sumvector[101] = delay_pipeline[102];

  assign sumvector[102] = delay_pipeline[103];

  assign sumvector[103] = delay_pipeline[104];

  assign sumvector[104] = delay_pipeline[105];

  assign sumvector[105] = delay_pipeline[106];

  assign sumvector[106] = delay_pipeline[107];

  assign sumvector[107] = delay_pipeline[108];

  assign sumvector[108] = delay_pipeline[109];

  assign sumvector[109] = delay_pipeline[110];

  assign sumvector[110] = delay_pipeline[111];

  assign add_signext_14 = $signed({{8{product113[15]}}, product113});
  assign add_signext_15 = delay_pipeline[112];
  assign add_temp_7 = add_signext_14 + add_signext_15;
  assign sumvector[111] = add_temp_7[23:0];

  assign sumvector[112] = delay_pipeline[113];

  assign sumvector[113] = delay_pipeline[114];

  assign sumvector[114] = delay_pipeline[115];

  assign sumvector[115] = delay_pipeline[116];

  assign sumvector[116] = delay_pipeline[117];

  assign sumvector[117] = delay_pipeline[118];

  assign sumvector[118] = delay_pipeline[119];

  assign sumvector[119] = delay_pipeline[120];

  assign sumvector[120] = delay_pipeline[121];

  assign sumvector[121] = delay_pipeline[122];

  assign sumvector[122] = delay_pipeline[123];

  assign sumvector[123] = delay_pipeline[124];

  assign sumvector[124] = delay_pipeline[125];

  assign sumvector[125] = delay_pipeline[126];

  assign sumvector[126] = delay_pipeline[127];

  assign add_signext_16 = $signed({{8{product129[15]}}, product129});
  assign add_signext_17 = delay_pipeline[128];
  assign add_temp_8 = add_signext_16 + add_signext_17;
  assign sumvector[127] = add_temp_8[23:0];

  assign sumvector[128] = delay_pipeline[129];

  assign sumvector[129] = delay_pipeline[130];

  assign sumvector[130] = delay_pipeline[131];

  assign sumvector[131] = delay_pipeline[132];

  assign sumvector[132] = delay_pipeline[133];

  assign sumvector[133] = delay_pipeline[134];

  assign sumvector[134] = delay_pipeline[135];

  assign sumvector[135] = delay_pipeline[136];

  assign sumvector[136] = delay_pipeline[137];

  assign sumvector[137] = delay_pipeline[138];

  assign sumvector[138] = delay_pipeline[139];

  assign sumvector[139] = delay_pipeline[140];

  assign sumvector[140] = delay_pipeline[141];

  assign sumvector[141] = delay_pipeline[142];

  assign sumvector[142] = delay_pipeline[143];

  assign sumvector[143] = constzero;

  assign output_typeconvert = finalsum[14:7];

  // Assignment Statements
  assign filter_out = output_typeconvert;
endmodule  // casfilt_stage1
