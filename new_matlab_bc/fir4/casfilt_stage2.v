// -------------------------------------------------------------
//
// Module: filter
// Generated by MATLAB(R) 9.8 and Filter Design HDL Coder 3.1.7.
// Generated on: 2021-02-23 21:47:13
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// Name: casfilt
// InputDataType: numerictype(1,10,9)
// TargetLanguage: Verilog
// GenerateHDLTestBench: off

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// Folding Factor        : 1
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form Symmetric FIR
// Filter Length     : 153
// Stable            : Yes
// Linear Phase      : Yes (Type 1)
// Arithmetic        : fixed
// Numerator         : s10,9 -> [-1 1)
// -------------------------------------------------------------
// Multipliers           : 12



`timescale 1 ns / 1 ns

module casfilt_stage2
               (
                clk,
                clk_enable_stage2,
                reset,
                filter_in_stage2,
                filter_out_stage2
                );

  input   clk; 
  input   clk_enable_stage2; 
  input   reset; 
  input   signed [9:0] filter_in_stage2; //sfix10_En9
  output  signed [9:0] filter_out_stage2; //sfix10_En9

////////////////////////////////////////////////////////////////
//Module Architecture: casfilt_stage2
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  parameter signed [9:0] coeff1 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff2 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff3 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff4 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff5 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff6 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff7 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff8 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff9 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff10 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff11 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff12 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff13 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff14 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff15 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff16 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff17 = 10'b1111111111; //sfix10_En9
  parameter signed [9:0] coeff18 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff19 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff20 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff21 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff22 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff23 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff24 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff25 = 10'b0000000010; //sfix10_En9
  parameter signed [9:0] coeff26 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff27 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff28 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff29 = 10'b0000000001; //sfix10_En9
  parameter signed [9:0] coeff30 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff31 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff32 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff33 = 10'b1111111011; //sfix10_En9
  parameter signed [9:0] coeff34 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff35 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff36 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff37 = 10'b1111111111; //sfix10_En9
  parameter signed [9:0] coeff38 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff39 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff40 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff41 = 10'b0000001001; //sfix10_En9
  parameter signed [9:0] coeff42 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff43 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff44 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff45 = 10'b0000000001; //sfix10_En9
  parameter signed [9:0] coeff46 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff47 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff48 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff49 = 10'b1111110001; //sfix10_En9
  parameter signed [9:0] coeff50 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff51 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff52 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff53 = 10'b1111111111; //sfix10_En9
  parameter signed [9:0] coeff54 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff55 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff56 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff57 = 10'b0000011010; //sfix10_En9
  parameter signed [9:0] coeff58 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff59 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff60 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff61 = 10'b0000000010; //sfix10_En9
  parameter signed [9:0] coeff62 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff63 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff64 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff65 = 10'b1111001110; //sfix10_En9
  parameter signed [9:0] coeff66 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff67 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff68 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff69 = 10'b1111111110; //sfix10_En9
  parameter signed [9:0] coeff70 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff71 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff72 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff73 = 10'b0010100010; //sfix10_En9
  parameter signed [9:0] coeff74 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff75 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff76 = 10'b0000000000; //sfix10_En9
  parameter signed [9:0] coeff77 = 10'b0100000010; //sfix10_En9


  wire signed [20:0] product77; // sfix21_En18
  wire signed [19:0] mul_temp; // sfix20_En18
  wire signed [20:0] product73; // sfix21_En18
  wire signed [20:0] product69; // sfix21_En18
  wire signed [11:0] mulpwr2_temp; // sfix12_En9
  wire signed [20:0] product65; // sfix21_En18
  wire signed [20:0] product61; // sfix21_En18
  wire signed [20:0] product57; // sfix21_En18
  wire signed [20:0] product53; // sfix21_En18
  wire signed [11:0] mulpwr2_temp_1; // sfix12_En9
  wire signed [20:0] product49; // sfix21_En18
  wire signed [20:0] product45; // sfix21_En18
  wire signed [20:0] product41; // sfix21_En18
  wire signed [20:0] product37; // sfix21_En18
  wire signed [11:0] mulpwr2_temp_2; // sfix12_En9
  wire signed [20:0] product33; // sfix21_En18
  wire signed [20:0] product29; // sfix21_En18
  wire signed [20:0] product25; // sfix21_En18
  wire signed [20:0] product17; // sfix21_En18
  wire signed [11:0] mulpwr2_temp_3; // sfix12_En9
  wire signed [27:0] sum1; // sfix28_En18
  wire signed [20:0] add_signext_28; // sfix21_En18
  wire signed [20:0] add_signext_29; // sfix21_En18
  wire signed [21:0] add_temp; // sfix22_En18
  wire signed [27:0] sum2; // sfix28_En18
  wire signed [27:0] add_signext_30; // sfix28_En18
  wire signed [27:0] add_signext_31; // sfix28_En18
  wire signed [28:0] add_temp_1; // sfix29_En18
  wire signed [27:0] sum3; // sfix28_En18
  wire signed [27:0] add_signext_32; // sfix28_En18
  wire signed [27:0] add_signext_33; // sfix28_En18
  wire signed [28:0] add_temp_2; // sfix29_En18
  wire signed [27:0] sum4; // sfix28_En18
  wire signed [27:0] add_signext_34; // sfix28_En18
  wire signed [27:0] add_signext_35; // sfix28_En18
  wire signed [28:0] add_temp_3; // sfix29_En18
  wire signed [27:0] sum5; // sfix28_En18
  wire signed [27:0] add_signext_36; // sfix28_En18
  wire signed [27:0] add_signext_37; // sfix28_En18
  wire signed [28:0] add_temp_4; // sfix29_En18
  wire signed [27:0] sum6; // sfix28_En18
  wire signed [27:0] add_signext_38; // sfix28_En18
  wire signed [27:0] add_signext_39; // sfix28_En18
  wire signed [28:0] add_temp_5; // sfix29_En18
  wire signed [27:0] sum7; // sfix28_En18
  wire signed [27:0] add_signext_40; // sfix28_En18
  wire signed [27:0] add_signext_41; // sfix28_En18
  wire signed [28:0] add_temp_6; // sfix29_En18
  wire signed [27:0] sum8; // sfix28_En18
  wire signed [27:0] add_signext_42; // sfix28_En18
  wire signed [27:0] add_signext_43; // sfix28_En18
  wire signed [28:0] add_temp_7; // sfix29_En18
  wire signed [27:0] sum9; // sfix28_En18
  wire signed [27:0] add_signext_44; // sfix28_En18
  wire signed [27:0] add_signext_45; // sfix28_En18
  wire signed [28:0] add_temp_8; // sfix29_En18
  wire signed [27:0] sum10; // sfix28_En18
  wire signed [27:0] add_signext_46; // sfix28_En18
  wire signed [27:0] add_signext_47; // sfix28_En18
  wire signed [28:0] add_temp_9; // sfix29_En18
  wire signed [27:0] sum11; // sfix28_En18
  wire signed [27:0] add_signext_48; // sfix28_En18
  wire signed [27:0] add_signext_49; // sfix28_En18
  wire signed [28:0] add_temp_10; // sfix29_En18
  wire signed [27:0] sum12; // sfix28_En18
  wire signed [27:0] add_signext_50; // sfix28_En18
  wire signed [27:0] add_signext_51; // sfix28_En18
  wire signed [28:0] add_temp_11; // sfix29_En18
  wire signed [27:0] sum13; // sfix28_En18
  wire signed [27:0] add_signext_52; // sfix28_En18
  wire signed [27:0] add_signext_53; // sfix28_En18
  wire signed [28:0] add_temp_12; // sfix29_En18
  wire signed [27:0] sum14; // sfix28_En18
  wire signed [27:0] add_signext_54; // sfix28_En18
  wire signed [27:0] add_signext_55; // sfix28_En18
  wire signed [28:0] add_temp_13; // sfix29_En18
  wire signed [9:0] output_typeconvert; // sfix10_En9

  // Block Statements
  always @( posedge clk or posedge reset)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
        delay_pipeline[41] <= 0;
        delay_pipeline[42] <= 0;
        delay_pipeline[43] <= 0;
        delay_pipeline[44] <= 0;
        delay_pipeline[45] <= 0;
        delay_pipeline[46] <= 0;
        delay_pipeline[47] <= 0;
        delay_pipeline[48] <= 0;
        delay_pipeline[49] <= 0;
        delay_pipeline[50] <= 0;
        delay_pipeline[51] <= 0;
        delay_pipeline[52] <= 0;
        delay_pipeline[53] <= 0;
        delay_pipeline[54] <= 0;
        delay_pipeline[55] <= 0;
        delay_pipeline[56] <= 0;
        delay_pipeline[57] <= 0;
        delay_pipeline[58] <= 0;
        delay_pipeline[59] <= 0;
        delay_pipeline[60] <= 0;
        delay_pipeline[61] <= 0;
        delay_pipeline[62] <= 0;
        delay_pipeline[63] <= 0;
        delay_pipeline[64] <= 0;
        delay_pipeline[65] <= 0;
        delay_pipeline[66] <= 0;
        delay_pipeline[67] <= 0;
        delay_pipeline[68] <= 0;
        delay_pipeline[69] <= 0;
        delay_pipeline[70] <= 0;
        delay_pipeline[71] <= 0;
        delay_pipeline[72] <= 0;
        delay_pipeline[73] <= 0;
        delay_pipeline[74] <= 0;
        delay_pipeline[75] <= 0;
        delay_pipeline[76] <= 0;
        delay_pipeline[77] <= 0;
        delay_pipeline[78] <= 0;
        delay_pipeline[79] <= 0;
        delay_pipeline[80] <= 0;
        delay_pipeline[81] <= 0;
        delay_pipeline[82] <= 0;
        delay_pipeline[83] <= 0;
        delay_pipeline[84] <= 0;
        delay_pipeline[85] <= 0;
        delay_pipeline[86] <= 0;
        delay_pipeline[87] <= 0;
        delay_pipeline[88] <= 0;
        delay_pipeline[89] <= 0;
        delay_pipeline[90] <= 0;
        delay_pipeline[91] <= 0;
        delay_pipeline[92] <= 0;
        delay_pipeline[93] <= 0;
        delay_pipeline[94] <= 0;
        delay_pipeline[95] <= 0;
        delay_pipeline[96] <= 0;
        delay_pipeline[97] <= 0;
        delay_pipeline[98] <= 0;
        delay_pipeline[99] <= 0;
        delay_pipeline[100] <= 0;
        delay_pipeline[101] <= 0;
        delay_pipeline[102] <= 0;
        delay_pipeline[103] <= 0;
        delay_pipeline[104] <= 0;
        delay_pipeline[105] <= 0;
        delay_pipeline[106] <= 0;
        delay_pipeline[107] <= 0;
        delay_pipeline[108] <= 0;
        delay_pipeline[109] <= 0;
        delay_pipeline[110] <= 0;
        delay_pipeline[111] <= 0;
        delay_pipeline[112] <= 0;
        delay_pipeline[113] <= 0;
        delay_pipeline[114] <= 0;
        delay_pipeline[115] <= 0;
        delay_pipeline[116] <= 0;
        delay_pipeline[117] <= 0;
        delay_pipeline[118] <= 0;
        delay_pipeline[119] <= 0;
        delay_pipeline[120] <= 0;
        delay_pipeline[121] <= 0;
        delay_pipeline[122] <= 0;
        delay_pipeline[123] <= 0;
        delay_pipeline[124] <= 0;
        delay_pipeline[125] <= 0;
        delay_pipeline[126] <= 0;
        delay_pipeline[127] <= 0;
        delay_pipeline[128] <= 0;
        delay_pipeline[129] <= 0;
        delay_pipeline[130] <= 0;
        delay_pipeline[131] <= 0;
        delay_pipeline[132] <= 0;
        delay_pipeline[133] <= 0;
        delay_pipeline[134] <= 0;
        delay_pipeline[135] <= 0;
        delay_pipeline[136] <= 0;
        delay_pipeline[137] <= 0;
        delay_pipeline[138] <= 0;
        delay_pipeline[139] <= 0;
        delay_pipeline[140] <= 0;
        delay_pipeline[141] <= 0;
        delay_pipeline[142] <= 0;
        delay_pipeline[143] <= 0;
        delay_pipeline[144] <= 0;
        delay_pipeline[145] <= 0;
        delay_pipeline[146] <= 0;
        delay_pipeline[147] <= 0;
        delay_pipeline[148] <= 0;
        delay_pipeline[149] <= 0;
        delay_pipeline[150] <= 0;
        delay_pipeline[151] <= 0;
      end
      else begin
        if (clk_enable_stage2 == 1'b1) begin
          delay_pipeline[0] <= filter_in_stage2;
          delay_pipeline[1] <= delay_pipeline[0];
          delay_pipeline[2] <= delay_pipeline[1];
          delay_pipeline[3] <= delay_pipeline[2];
          delay_pipeline[4] <= delay_pipeline[3];
          delay_pipeline[5] <= delay_pipeline[4];
          delay_pipeline[6] <= delay_pipeline[5];
          delay_pipeline[7] <= delay_pipeline[6];
          delay_pipeline[8] <= delay_pipeline[7];
          delay_pipeline[9] <= delay_pipeline[8];
          delay_pipeline[10] <= delay_pipeline[9];
          delay_pipeline[11] <= delay_pipeline[10];
          delay_pipeline[12] <= delay_pipeline[11];
          delay_pipeline[13] <= delay_pipeline[12];
          delay_pipeline[14] <= delay_pipeline[13];
          delay_pipeline[15] <= delay_pipeline[14];
          delay_pipeline[16] <= delay_pipeline[15];
          delay_pipeline[17] <= delay_pipeline[16];
          delay_pipeline[18] <= delay_pipeline[17];
          delay_pipeline[19] <= delay_pipeline[18];
          delay_pipeline[20] <= delay_pipeline[19];
          delay_pipeline[21] <= delay_pipeline[20];
          delay_pipeline[22] <= delay_pipeline[21];
          delay_pipeline[23] <= delay_pipeline[22];
          delay_pipeline[24] <= delay_pipeline[23];
          delay_pipeline[25] <= delay_pipeline[24];
          delay_pipeline[26] <= delay_pipeline[25];
          delay_pipeline[27] <= delay_pipeline[26];
          delay_pipeline[28] <= delay_pipeline[27];
          delay_pipeline[29] <= delay_pipeline[28];
          delay_pipeline[30] <= delay_pipeline[29];
          delay_pipeline[31] <= delay_pipeline[30];
          delay_pipeline[32] <= delay_pipeline[31];
          delay_pipeline[33] <= delay_pipeline[32];
          delay_pipeline[34] <= delay_pipeline[33];
          delay_pipeline[35] <= delay_pipeline[34];
          delay_pipeline[36] <= delay_pipeline[35];
          delay_pipeline[37] <= delay_pipeline[36];
          delay_pipeline[38] <= delay_pipeline[37];
          delay_pipeline[39] <= delay_pipeline[38];
          delay_pipeline[40] <= delay_pipeline[39];
          delay_pipeline[41] <= delay_pipeline[40];
          delay_pipeline[42] <= delay_pipeline[41];
          delay_pipeline[43] <= delay_pipeline[42];
          delay_pipeline[44] <= delay_pipeline[43];
          delay_pipeline[45] <= delay_pipeline[44];
          delay_pipeline[46] <= delay_pipeline[45];
          delay_pipeline[47] <= delay_pipeline[46];
          delay_pipeline[48] <= delay_pipeline[47];
          delay_pipeline[49] <= delay_pipeline[48];
          delay_pipeline[50] <= delay_pipeline[49];
          delay_pipeline[51] <= delay_pipeline[50];
          delay_pipeline[52] <= delay_pipeline[51];
          delay_pipeline[53] <= delay_pipeline[52];
          delay_pipeline[54] <= delay_pipeline[53];
          delay_pipeline[55] <= delay_pipeline[54];
          delay_pipeline[56] <= delay_pipeline[55];
          delay_pipeline[57] <= delay_pipeline[56];
          delay_pipeline[58] <= delay_pipeline[57];
          delay_pipeline[59] <= delay_pipeline[58];
          delay_pipeline[60] <= delay_pipeline[59];
          delay_pipeline[61] <= delay_pipeline[60];
          delay_pipeline[62] <= delay_pipeline[61];
          delay_pipeline[63] <= delay_pipeline[62];
          delay_pipeline[64] <= delay_pipeline[63];
          delay_pipeline[65] <= delay_pipeline[64];
          delay_pipeline[66] <= delay_pipeline[65];
          delay_pipeline[67] <= delay_pipeline[66];
          delay_pipeline[68] <= delay_pipeline[67];
          delay_pipeline[69] <= delay_pipeline[68];
          delay_pipeline[70] <= delay_pipeline[69];
          delay_pipeline[71] <= delay_pipeline[70];
          delay_pipeline[72] <= delay_pipeline[71];
          delay_pipeline[73] <= delay_pipeline[72];
          delay_pipeline[74] <= delay_pipeline[73];
          delay_pipeline[75] <= delay_pipeline[74];
          delay_pipeline[76] <= delay_pipeline[75];
          delay_pipeline[77] <= delay_pipeline[76];
          delay_pipeline[78] <= delay_pipeline[77];
          delay_pipeline[79] <= delay_pipeline[78];
          delay_pipeline[80] <= delay_pipeline[79];
          delay_pipeline[81] <= delay_pipeline[80];
          delay_pipeline[82] <= delay_pipeline[81];
          delay_pipeline[83] <= delay_pipeline[82];
          delay_pipeline[84] <= delay_pipeline[83];
          delay_pipeline[85] <= delay_pipeline[84];
          delay_pipeline[86] <= delay_pipeline[85];
          delay_pipeline[87] <= delay_pipeline[86];
          delay_pipeline[88] <= delay_pipeline[87];
          delay_pipeline[89] <= delay_pipeline[88];
          delay_pipeline[90] <= delay_pipeline[89];
          delay_pipeline[91] <= delay_pipeline[90];
          delay_pipeline[92] <= delay_pipeline[91];
          delay_pipeline[93] <= delay_pipeline[92];
          delay_pipeline[94] <= delay_pipeline[93];
          delay_pipeline[95] <= delay_pipeline[94];
          delay_pipeline[96] <= delay_pipeline[95];
          delay_pipeline[97] <= delay_pipeline[96];
          delay_pipeline[98] <= delay_pipeline[97];
          delay_pipeline[99] <= delay_pipeline[98];
          delay_pipeline[100] <= delay_pipeline[99];
          delay_pipeline[101] <= delay_pipeline[100];
          delay_pipeline[102] <= delay_pipeline[101];
          delay_pipeline[103] <= delay_pipeline[102];
          delay_pipeline[104] <= delay_pipeline[103];
          delay_pipeline[105] <= delay_pipeline[104];
          delay_pipeline[106] <= delay_pipeline[105];
          delay_pipeline[107] <= delay_pipeline[106];
          delay_pipeline[108] <= delay_pipeline[107];
          delay_pipeline[109] <= delay_pipeline[108];
          delay_pipeline[110] <= delay_pipeline[109];
          delay_pipeline[111] <= delay_pipeline[110];
          delay_pipeline[112] <= delay_pipeline[111];
          delay_pipeline[113] <= delay_pipeline[112];
          delay_pipeline[114] <= delay_pipeline[113];
          delay_pipeline[115] <= delay_pipeline[114];
          delay_pipeline[116] <= delay_pipeline[115];
          delay_pipeline[117] <= delay_pipeline[116];
          delay_pipeline[118] <= delay_pipeline[117];
          delay_pipeline[119] <= delay_pipeline[118];
          delay_pipeline[120] <= delay_pipeline[119];
          delay_pipeline[121] <= delay_pipeline[120];
          delay_pipeline[122] <= delay_pipeline[121];
          delay_pipeline[123] <= delay_pipeline[122];
          delay_pipeline[124] <= delay_pipeline[123];
          delay_pipeline[125] <= delay_pipeline[124];
          delay_pipeline[126] <= delay_pipeline[125];
          delay_pipeline[127] <= delay_pipeline[126];
          delay_pipeline[128] <= delay_pipeline[127];
          delay_pipeline[129] <= delay_pipeline[128];
          delay_pipeline[130] <= delay_pipeline[129];
          delay_pipeline[131] <= delay_pipeline[130];
          delay_pipeline[132] <= delay_pipeline[131];
          delay_pipeline[133] <= delay_pipeline[132];
          delay_pipeline[134] <= delay_pipeline[133];
          delay_pipeline[135] <= delay_pipeline[134];
          delay_pipeline[136] <= delay_pipeline[135];
          delay_pipeline[137] <= delay_pipeline[136];
          delay_pipeline[138] <= delay_pipeline[137];
          delay_pipeline[139] <= delay_pipeline[138];
          delay_pipeline[140] <= delay_pipeline[139];
          delay_pipeline[141] <= delay_pipeline[140];
          delay_pipeline[142] <= delay_pipeline[141];
          delay_pipeline[143] <= delay_pipeline[142];
          delay_pipeline[144] <= delay_pipeline[143];
          delay_pipeline[145] <= delay_pipeline[144];
          delay_pipeline[146] <= delay_pipeline[145];
          delay_pipeline[147] <= delay_pipeline[146];
          delay_pipeline[148] <= delay_pipeline[147];
          delay_pipeline[149] <= delay_pipeline[148];
          delay_pipeline[150] <= delay_pipeline[149];
          delay_pipeline[151] <= delay_pipeline[150];
        end
      end
    end // Delay_Pipeline_process


 
  assign mul_temp = delay_pipeline[75] * coeff77;
  assign product77 = $signed({{1{mul_temp[19]}}, mul_temp});

  assign product73 = tapsum_mcand_13 * coeff73;

  assign mulpwr2_temp = (tapsum_mcand_12==11'b10000000000) ? $signed({1'b0, tapsum_mcand_12}) : -tapsum_mcand_12;

  assign product69 = $signed({mulpwr2_temp[11:0], 1'b0});

  assign product65 = tapsum_mcand_11 * coeff65;

  assign product61 = $signed({tapsum_mcand_10[10:0], 1'b0});

  assign product57 = tapsum_mcand_9 * coeff57;

  assign mulpwr2_temp_1 = (tapsum_mcand_8==11'b10000000000) ? $signed({1'b0, tapsum_mcand_8}) : -tapsum_mcand_8;

  assign product53 = $signed({{9{mulpwr2_temp_1[11]}}, mulpwr2_temp_1});

  assign product49 = tapsum_mcand_7 * coeff49;

  assign product45 = $signed({{10{tapsum_mcand_6[10]}}, tapsum_mcand_6});

  assign product41 = tapsum_mcand_5 * coeff41;

  assign mulpwr2_temp_2 = (tapsum_mcand_4==11'b10000000000) ? $signed({1'b0, tapsum_mcand_4}) : -tapsum_mcand_4;

  assign product37 = $signed({{9{mulpwr2_temp_2[11]}}, mulpwr2_temp_2});

  assign product33 = tapsum_mcand_3 * coeff33;

  assign product29 = $signed({{10{tapsum_mcand_2[10]}}, tapsum_mcand_2});

  assign product25 = $signed({tapsum_mcand_1[10:0], 1'b0});

  assign mulpwr2_temp_3 = (tapsum_mcand==11'b10000000000) ? $signed({1'b0, tapsum_mcand}) : -tapsum_mcand;

  assign product17 = $signed({{9{mulpwr2_temp_3[11]}}, mulpwr2_temp_3});

  assign add_signext_28 = product17;
  assign add_signext_29 = product25;
  assign add_temp = add_signext_28 + add_signext_29;
  assign sum1 = $signed({{6{add_temp[21]}}, add_temp});

  assign add_signext_30 = sum1;
  assign add_signext_31 = $signed({{7{product29[20]}}, product29});
  assign add_temp_1 = add_signext_30 + add_signext_31;
  assign sum2 = add_temp_1[27:0];

  assign add_signext_32 = sum2;
  assign add_signext_33 = $signed({{7{product33[20]}}, product33});
  assign add_temp_2 = add_signext_32 + add_signext_33;
  assign sum3 = add_temp_2[27:0];

  assign add_signext_34 = sum3;
  assign add_signext_35 = $signed({{7{product37[20]}}, product37});
  assign add_temp_3 = add_signext_34 + add_signext_35;
  assign sum4 = add_temp_3[27:0];

  assign add_signext_36 = sum4;
  assign add_signext_37 = $signed({{7{product41[20]}}, product41});
  assign add_temp_4 = add_signext_36 + add_signext_37;
  assign sum5 = add_temp_4[27:0];

  assign add_signext_38 = sum5;
  assign add_signext_39 = $signed({{7{product45[20]}}, product45});
  assign add_temp_5 = add_signext_38 + add_signext_39;
  assign sum6 = add_temp_5[27:0];

  assign add_signext_40 = sum6;
  assign add_signext_41 = $signed({{7{product49[20]}}, product49});
  assign add_temp_6 = add_signext_40 + add_signext_41;
  assign sum7 = add_temp_6[27:0];

  assign add_signext_42 = sum7;
  assign add_signext_43 = $signed({{7{product53[20]}}, product53});
  assign add_temp_7 = add_signext_42 + add_signext_43;
  assign sum8 = add_temp_7[27:0];

  assign add_signext_44 = sum8;
  assign add_signext_45 = $signed({{7{product57[20]}}, product57});
  assign add_temp_8 = add_signext_44 + add_signext_45;
  assign sum9 = add_temp_8[27:0];

  assign add_signext_46 = sum9;
  assign add_signext_47 = $signed({{7{product61[20]}}, product61});
  assign add_temp_9 = add_signext_46 + add_signext_47;
  assign sum10 = add_temp_9[27:0];

  assign add_signext_48 = sum10;
  assign add_signext_49 = $signed({{7{product65[20]}}, product65});
  assign add_temp_10 = add_signext_48 + add_signext_49;
  assign sum11 = add_temp_10[27:0];

  assign add_signext_50 = sum11;
  assign add_signext_51 = $signed({{7{product69[20]}}, product69});
  assign add_temp_11 = add_signext_50 + add_signext_51;
  assign sum12 = add_temp_11[27:0];

  assign add_signext_52 = sum12;
  assign add_signext_53 = $signed({{7{product73[20]}}, product73});
  assign add_temp_12 = add_signext_52 + add_signext_53;
  assign sum13 = add_temp_12[27:0];

  assign add_signext_54 = sum13;
  assign add_signext_55 = $signed({{7{product77[20]}}, product77});
  assign add_temp_13 = add_signext_54 + add_signext_55;
  assign sum14 = add_temp_13[27:0];

  assign output_typeconvert = sum14[18:9];

  // Assignment Statements
  assign filter_out_stage2 = output_typeconvert;
endmodule  // casfilt_stage2
