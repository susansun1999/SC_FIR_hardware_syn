/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : O-2018.06
// Date      : Thu Oct 29 22:57:55 2020
/////////////////////////////////////////////////////////////


module VDC_DW01_inc_0 ( A, SUM );
  input [11:0] A;
  output [11:0] SUM;

  wire   [11:2] carry;

  hadd1s1 U1_1_10 ( .AIN(A[10]), .BIN(carry[10]), .OUTC(carry[11]), .OUTS(
        SUM[10]) );
  hadd1s1 U1_1_2 ( .AIN(A[2]), .BIN(carry[2]), .OUTC(carry[3]), .OUTS(SUM[2])
         );
  hadd1s1 U1_1_3 ( .AIN(A[3]), .BIN(carry[3]), .OUTC(carry[4]), .OUTS(SUM[3])
         );
  hadd1s1 U1_1_4 ( .AIN(A[4]), .BIN(carry[4]), .OUTC(carry[5]), .OUTS(SUM[4])
         );
  hadd1s1 U1_1_5 ( .AIN(A[5]), .BIN(carry[5]), .OUTC(carry[6]), .OUTS(SUM[5])
         );
  hadd1s1 U1_1_6 ( .AIN(A[6]), .BIN(carry[6]), .OUTC(carry[7]), .OUTS(SUM[6])
         );
  hadd1s1 U1_1_7 ( .AIN(A[7]), .BIN(carry[7]), .OUTC(carry[8]), .OUTS(SUM[7])
         );
  hadd1s1 U1_1_8 ( .AIN(A[8]), .BIN(carry[8]), .OUTC(carry[9]), .OUTS(SUM[8])
         );
  hadd1s1 U1_1_9 ( .AIN(A[9]), .BIN(carry[9]), .OUTC(carry[10]), .OUTS(SUM[9])
         );
  hadd1s1 U1_1_1 ( .AIN(A[1]), .BIN(A[0]), .OUTC(carry[2]), .OUTS(SUM[1]) );
  xor2s1 U1 ( .DIN1(carry[11]), .DIN2(A[11]), .Q(SUM[11]) );
  hi1s1 U2 ( .DIN(A[0]), .Q(SUM[0]) );
endmodule


module VDC ( reset, clock, out_re, out );
  output [11:0] out_re;
  output [11:0] out;
  input reset, clock;
  wire   n14;
  wire   [11:0] next_count;

  VDC_DW01_inc_0 add_25 ( .A({out_re[0], out_re[1], out_re[2], out_re[3], 
        out_re[4], out_re[5], out_re[6], out_re[7], out_re[8], out_re[9], 
        out_re[10], out_re[11]}), .SUM(next_count) );
  dffcs1 \count_reg[0]  ( .CLRB(next_count[0]), .DIN(n14), .CLK(clock), .Q(
        out_re[11]) );
  dffcs1 \count_reg[1]  ( .CLRB(next_count[1]), .DIN(n14), .CLK(clock), .Q(
        out_re[10]) );
  dffcs1 \count_reg[2]  ( .CLRB(next_count[2]), .DIN(n14), .CLK(clock), .Q(
        out_re[9]) );
  dffcs1 \count_reg[3]  ( .CLRB(next_count[3]), .DIN(n14), .CLK(clock), .Q(
        out_re[8]) );
  dffcs1 \count_reg[4]  ( .CLRB(next_count[4]), .DIN(n14), .CLK(clock), .Q(
        out_re[7]) );
  dffcs1 \count_reg[5]  ( .CLRB(next_count[5]), .DIN(n14), .CLK(clock), .Q(
        out_re[6]) );
  dffcs1 \count_reg[6]  ( .CLRB(next_count[6]), .DIN(n14), .CLK(clock), .Q(
        out_re[5]) );
  dffcs1 \count_reg[7]  ( .CLRB(next_count[7]), .DIN(n14), .CLK(clock), .Q(
        out_re[4]) );
  dffcs1 \count_reg[8]  ( .CLRB(next_count[8]), .DIN(n14), .CLK(clock), .Q(
        out_re[3]) );
  dffcs1 \count_reg[9]  ( .CLRB(next_count[9]), .DIN(n14), .CLK(clock), .Q(
        out_re[2]) );
  dffcs1 \count_reg[10]  ( .CLRB(next_count[10]), .DIN(n14), .CLK(clock), .Q(
        out_re[1]) );
  dffcs1 \count_reg[11]  ( .CLRB(next_count[11]), .DIN(n14), .CLK(clock), .Q(
        out_re[0]) );
  ib1s1 U4 ( .DIN(reset), .Q(n14) );
  nb1s2 U5 ( .DIN(out_re[11]), .Q(out[0]) );
  nb1s2 U6 ( .DIN(out_re[10]), .Q(out[1]) );
  nb1s2 U7 ( .DIN(out_re[9]), .Q(out[2]) );
  nb1s2 U8 ( .DIN(out_re[8]), .Q(out[3]) );
  nb1s2 U9 ( .DIN(out_re[7]), .Q(out[4]) );
  nb1s2 U10 ( .DIN(out_re[6]), .Q(out[5]) );
  nb1s2 U11 ( .DIN(out_re[5]), .Q(out[6]) );
  nb1s2 U12 ( .DIN(out_re[4]), .Q(out[7]) );
  nb1s2 U13 ( .DIN(out_re[3]), .Q(out[8]) );
  nb1s2 U14 ( .DIN(out_re[2]), .Q(out[9]) );
  nb1s2 U15 ( .DIN(out_re[1]), .Q(out[10]) );
  nb1s2 U16 ( .DIN(out_re[0]), .Q(out[11]) );
endmodule

